name: 'Build .NET steps'

inputs:
  artifact-name:
    required: true
    type: string
  should-run-tests:
    required: false
    type: boolean
    default: true
  projects:
    required: false
    type: string
    default: '**/*.csproj'
  tests:
    required: false
    type: string
    default: '**/*.Tests.csproj'
  apply-versioning:
    required: false
    type: boolean
    default: true
  dotnet-version:
    required: false
    type: string
    default: 'latest'
  nuget-feed-source:
    required: false
    type: string
  nuget-feed-name:
    required: false
    type: string
  azure-devops-token:
    required: true
    type: string

runs:
  using: "composite"
  steps:
  - uses: ./.github/actions/build/common/environment/tasks/setup-dotnet-environment
    with:
      dotnet-version: ${{ inputs.dotnet-version }}
  - run: echo "pat token ${{ inputs.azure-devops-token }}"
    shell: bash
  - name: Auth NuGet
    if: ${{ inputs.nuget-feed-name }} != '' 
    shell: bash
    run: dotnet nuget add source ${{ inputs.nuget-feed-source }} --name ${{ inputs.nuget-feed-name }} --username az --password ${{ inputs.azure-devops-token }} --store-password-in-clear-text
  - uses: ./.github/actions/build/dotnet/tasks/restore
    with:
      projects: ${{ inputs.projects }}
  - uses: ./.github/actions/build/dotnet/tasks/build
    with:
      projects: ${{ inputs.projects }}
  - uses: ./.github/actions/build/dotnet/tasks/test
    with:
      projects: ${{ inputs.tests }}
      should-run-tests: ${{ inputs.should-run-tests }}
  - uses: ./.github/actions/build/dotnet/tasks/publish
    with:
      projects: ${{ inputs.projects }}
      artifact: ${{ inputs.artifact-name }}
  - uses: ./.github/actions/build/common/artifacts/tasks/upload
    with:  
      artifact-name: ${{ inputs.artifact-name }}
      paths: ${{ inputs.artifact-name }}
    
  # test:
  #   if: ${{ inputs.should-run-tests }}
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Test
  #     run: dotnet test --no-build --verbosity normal
  # upload-artifacts:
  #   runs-on: ubuntu-latest
  #   steps:
  #     # Upload the artifact to a temporary directory
  #   - name: Archive production artifacts
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: dist-without-markdown
  #         path: |
  #           dist
  #           !dist/**/*.md
  #   # Upload the code coverage results to a temporary directory
  #   - name: Archive code coverage results
  #     uses: actions/upload-artifact@v3
  #     with:
  #       name: code-coverage-report
  #       path: output/test/code-coverage.html