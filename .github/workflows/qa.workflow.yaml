name: Build and Deploy to the QA env

on:
  workflow_dispatch:
  push:
    branches: [ "dev" ]

jobs:
  build-api:
    runs-on: windows-latest
    environment: qa

    steps:
    - name: checkout code
      uses: actions/checkout@v3
    # - name: LS output after checkout
    #   run: ls 
    # - uses: ./.github/actions/stages/build
    #   with:
    #     nuget-feed-name: ${{ vars.NUGET_FEED_NAME }}
    #     nuget-feed-source: ${{ vars.NUGET_FEED_SOURCE }}
    #     azure-devops-token: '${{ vars.AZURE_DEVOPS_TOKEN }}'
    
      # create dotnet environment
    - uses: ./.github/actions/build/common/environment/tasks/setup-dotnet-environment
    - name: Auth NuGet
      if: ${{ inputs.nuget-feed-name }} != '' 
      shell: bash
      run: dotnet nuget add source ${{ vars.NUGET_FEED_SOURCE }} --name ${{ vars.NUGET_FEED_NAME }} --username az --password ${{ vars.AZURE_DEVOPS_TOKEN }} --store-password-in-clear-text

    - uses: ./.github/actions/build/dotnet/jobs/aspnet-core
      with:
        artifact-name: 'blab.api'
        apply-versioning: true
        projects: src/Blab.Api/src/Blab.Api/Blab.Api.csproj
        nuget-feed-source: ${{ vars.NUGET_FEED_SOURCE }}
        nuget-feed-name: ${{ vars.NUGET_FEED_NAME }}
        azure-devops-token: ${{ vars.AZURE_DEVOPS_TOKEN }}
        # tests: '' # Run all csproj which match the pattern **/*.Tests.csproj
        # should-run-tests: true # TODO: Uncomment when deploying working

  build-identity:
    runs-on: windows-latest
    environment: qa

    steps:
    - name: checkout code
      uses: actions/checkout@v3
    # - name: LS output after checkout
    #   run: ls 
    # - uses: ./.github/actions/stages/build
    #   with:
    #     nuget-feed-name: ${{ vars.NUGET_FEED_NAME }}
    #     nuget-feed-source: ${{ vars.NUGET_FEED_SOURCE }}
    #     azure-devops-token: '${{ vars.AZURE_DEVOPS_TOKEN }}'
    
      # create dotnet environment 
    - uses: ./.github/actions/build/common/environment/tasks/setup-dotnet-environment
    - name: Auth NuGet
      if: ${{ inputs.nuget-feed-name }} != '' 
      shell: bash
      run: dotnet nuget add source ${{ vars.NUGET_FEED_SOURCE }} --name ${{ vars.NUGET_FEED_NAME }} --username az --password ${{ vars.AZURE_DEVOPS_TOKEN }} --store-password-in-clear-text

    - uses: ./.github/actions/build/dotnet/jobs/aspnet-core
      with:
        artifact-name: 'blab.identity'
        apply-versioning: true
        projects: src/Blab.Api/src/Blab.Identity/Blab.Identity.csproj
        nuget-feed-source: ${{ vars.NUGET_FEED_SOURCE }}
        nuget-feed-name: ${{ vars.NUGET_FEED_NAME }}
        azure-devops-token: ${{ vars.AZURE_DEVOPS_TOKEN }}
        # tests: '' # Run all csproj which match the pattern **/*.Tests.csproj
        # should-run-tests: true # TODO: Uncomment when deploying working

  build-ui:
    runs-on: ubuntu-latest
    environment: qa

    steps:
    - name: checkout code
      uses: actions/checkout@v3
      # create node environment for spa
    - uses: ./.github/actions/build/common/environment/tasks/setup-node-environment
    - uses: ./.github/actions/build/npm/jobs/npm-application
      with:
        apply-versioning: true
        path: src/Blab.Ui
        artifact-name: blab.ui
        # tests: '' # Run all csproj which match the pattern **/*.Tests.csproj
        # should-run-tests: true # TODO: Uncomment when deploying working

    # - name: LS output after checkout
    #   run: ls 
    # - uses: ./.github/actions/stages/build
    #   with:
    #     nuget-feed-name: ${{ vars.NUGET_FEED_NAME }}
    #     nuget-feed-source: ${{ vars.NUGET_FEED_SOURCE }}
    #     azure-devops-token: '${{ vars.AZURE_DEVOPS_TOKEN }}'
    
  deploy-qa:
    needs: [build-api, build-identity, build-ui]
    runs-on: windows-latest
    environment: qa

    steps:
    # variable sub for app settings
    - name: 'App Settings Variable Substitution'
      uses: microsoft/variable-substitution@v1
      with:
        files: '**/appsettings.json'
      env:
        AuthenticationConfig.ClientId: ${{ vars.APP_SETTINGS_AUTHENTICATION_CONFIG_CLIENT_ID }}
        AuthenticationConfig.ClientSecret: ${{ vars.APP_SETTINGS_AUTHENTICATION_CONFIG_CLIENT_SECRET }}

    - uses: ./.github/actions/stages/deploy
      with:
        environment-name: 'Quality Assurance'
        environment-id: 'qa'